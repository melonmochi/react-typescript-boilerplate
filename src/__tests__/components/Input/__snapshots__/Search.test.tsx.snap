// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search Mount Snapshot 1`] = `
<Search
  className=""
  defaultActiveFirstOption={false}
  defaultOpen={false}
  onChange={[Function]}
  onPressEnter={[Function]}
  onSearch={[Function]}
  onVisibleChange={[Function]}
  placeholder=""
>
  <span
    className=""
    onClick={[Function]}
  >
    <Icon
      key="Icon"
      type="search"
    >
      <LocaleReceiver
        componentName="Icon"
      >
        <i
          aria-label="icon: search"
          className="anticon anticon-search"
        >
          <IconReact
            className=""
            type="search-o"
          >
            <svg
              aria-hidden="true"
              className=""
              data-icon="search"
              fill="currentColor"
              focusable="false"
              height="1em"
              key="svg-search"
              viewBox="64 64 896 896"
              width="1em"
            >
              <path
                d="M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0 0 11.6 0l43.6-43.5a8.2 8.2 0 0 0 0-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z"
                key="svg-search-svg-0"
              />
            </svg>
          </IconReact>
        </i>
      </LocaleReceiver>
    </Icon>
    <AutoComplete
      choiceTransitionName="zoom"
      className=""
      filterOption={false}
      key="Header Search AutoComplete"
      onChange={[Function]}
      optionLabelProp="children"
      showSearch={false}
      transitionName="slide-up"
    >
      <Select
        choiceTransitionName="zoom"
        className="ant-select-show-search ant-select-auto-complete"
        filterOption={false}
        getInputElement={[Function]}
        mode="SECRET_COMBOBOX_MODE_DO_NOT_USE"
        onChange={[Function]}
        optionLabelProp="children"
        showSearch={false}
        transitionName="slide-up"
      >
        <Select
          allowClear={false}
          autoClearSearchValue={true}
          backfill={false}
          choiceTransitionName="zoom"
          className="ant-select-show-search ant-select-auto-complete"
          clearIcon={
            <Icon
              className="ant-select-clear-icon"
              theme="filled"
              type="close-circle"
            />
          }
          combobox={true}
          defaultActiveFirstOption={true}
          defaultOpen={false}
          dropdownMatchSelectWidth={true}
          dropdownMenuStyle={Object {}}
          dropdownRender={[Function]}
          dropdownStyle={Object {}}
          filterOption={false}
          getInputElement={[Function]}
          inputIcon={
            <Icon
              className="ant-select-arrow-icon"
              type="down"
            />
          }
          labelInValue={false}
          menuItemSelectedIcon={
            <Icon
              className="ant-select-selected-icon"
              type="check"
            />
          }
          multiple={false}
          notFoundContent={null}
          onBlur={[Function]}
          onChange={[Function]}
          onDeselect={[Function]}
          onFocus={[Function]}
          onInputKeyDown={[Function]}
          onSearch={[Function]}
          onSelect={[Function]}
          optionFilterProp="value"
          optionLabelProp="children"
          placeholder=""
          prefixCls="ant-select"
          removeIcon={
            <Icon
              className="ant-select-remove-icon"
              type="close"
            />
          }
          showAction={
            Array [
              "click",
            ]
          }
          showSearch={false}
          tabIndex={0}
          tags={false}
          tokenSeparators={Array []}
          transitionName="slide-up"
        >
          <SelectTrigger
            ariaId="test-uuid"
            backfillValue=""
            combobox={true}
            defaultActiveFirstOption={true}
            dropdownMatchSelectWidth={true}
            dropdownMenuStyle={Object {}}
            dropdownRender={[Function]}
            dropdownStyle={Object {}}
            empty={false}
            inputValue=""
            menuItemSelectedIcon={
              <Icon
                className="ant-select-selected-icon"
                type="check"
              />
            }
            multiple={false}
            onDropdownVisibleChange={[Function]}
            onMenuDeselect={[Function]}
            onMenuSelect={[Function]}
            onPopupFocus={[Function]}
            options={Array []}
            prefixCls="ant-select"
            showAction={
              Array [
                "click",
              ]
            }
            showSearch={false}
            transitionName="slide-up"
            value={Array []}
            visible={false}
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              ariaId="test-uuid"
              backfillValue=""
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                }
              }
              combobox={true}
              defaultActiveFirstOption={true}
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              dropdownMatchSelectWidth={true}
              dropdownMenuStyle={Object {}}
              dropdownRender={[Function]}
              dropdownStyle={Object {}}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              hideAction={
                Array [
                  "blur",
                ]
              }
              inputValue=""
              mask={false}
              maskClosable={true}
              menuItemSelectedIcon={
                <Icon
                  className="ant-select-selected-icon"
                  type="check"
                />
              }
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              multiple={false}
              onDropdownVisibleChange={[Function]}
              onMenuDeselect={[Function]}
              onMenuSelect={[Function]}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              options={Array []}
              popup={
                <DropdownMenu
                  ariaId="test-uuid"
                  backfillValue=""
                  defaultActiveFirstOption={true}
                  dropdownMenuStyle={Object {}}
                  inputValue=""
                  menuItemSelectedIcon={
                    <Icon
                      className="ant-select-selected-icon"
                      type="check"
                    />
                  }
                  menuItems={Array []}
                  multiple={false}
                  onMenuDeselect={[Function]}
                  onMenuSelect={[Function]}
                  onPopupFocus={[Function]}
                  prefixCls="ant-select-dropdown"
                  value={Array []}
                  visible={false}
                />
              }
              popupAlign={Object {}}
              popupClassName="ant-select-dropdown--single"
              popupPlacement="bottomLeft"
              popupStyle={Object {}}
              popupTransitionName="slide-up"
              popupVisible={false}
              prefixCls="ant-select-dropdown"
              showAction={
                Array [
                  "click",
                ]
              }
              showSearch={false}
              transitionName="slide-up"
              value={Array []}
              visible={false}
            >
              <div
                className="ant-select-show-search ant-select-auto-complete ant-select ant-select-combobox ant-select-enabled"
                key="trigger"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseDown={[Function]}
                onMouseOut={[Function]}
                onMouseUp={[Function]}
                onTouchStart={[Function]}
              >
                <div
                  aria-autocomplete="list"
                  aria-controls="test-uuid"
                  aria-expanded={false}
                  aria-haspopup="true"
                  className="ant-select-selection
            ant-select-selection--single"
                  key="selection"
                  role="combobox"
                >
                  <div
                    className="ant-select-selection__rendered"
                  >
                    <ul>
                      <li
                        className="ant-select-search ant-select-search--inline"
                        key="__input"
                      >
                        <div
                          className="ant-select-search__field__wrap"
                        >
                          <InputElement
                            aria-label=""
                            className="ant-select-search__field"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            placeholder=""
                            type="text"
                            value=""
                          >
                            <Input
                              aria-label=""
                              className="ant-select-search__field"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onKeyDown={[Function]}
                              placeholder=""
                              type="text"
                              value=""
                            >
                              <ClearableLabeledInput
                                aria-label=""
                                className="ant-select-search__field"
                                element={
                                  <input
                                    aria-label=""
                                    className="ant-input ant-select-search__field"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onKeyDown={[Function]}
                                    placeholder=""
                                    type="text"
                                    value=""
                                  />
                                }
                                handleReset={[Function]}
                                inputType="input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onKeyDown={[Function]}
                                placeholder=""
                                prefixCls="ant-input"
                                type="text"
                                value=""
                              >
                                <input
                                  aria-label=""
                                  className="ant-input ant-select-search__field"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  placeholder=""
                                  type="text"
                                  value=""
                                />
                              </ClearableLabeledInput>
                            </Input>
                          </InputElement>
                          <span
                            className="ant-select-search__field__mirror"
                          >
                             
                          </span>
                        </div>
                      </li>
                    </ul>
                  </div>
                  <span
                    className="ant-select-arrow"
                    key="arrow"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitUserSelect": "none",
                        "userSelect": "none",
                      }
                    }
                    unselectable="on"
                  >
                    <Icon
                      className="ant-select-arrow-icon"
                      type="down"
                    >
                      <LocaleReceiver
                        componentName="Icon"
                      >
                        <i
                          aria-label="icon: down"
                          className="anticon anticon-down ant-select-arrow-icon"
                        >
                          <IconReact
                            className=""
                            type="down-o"
                          >
                            <svg
                              aria-hidden="true"
                              className=""
                              data-icon="down"
                              fill="currentColor"
                              focusable="false"
                              height="1em"
                              key="svg-down"
                              viewBox="64 64 896 896"
                              width="1em"
                            >
                              <path
                                d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                key="svg-down-svg-0"
                              />
                            </svg>
                          </IconReact>
                        </i>
                      </LocaleReceiver>
                    </Icon>
                  </span>
                </div>
              </div>
            </Trigger>
          </SelectTrigger>
        </Select>
      </Select>
    </AutoComplete>
  </span>
</Search>
`;
